# You can use this file to test the bitmap output, as well as the
# I2C address of the two OLED displays. SSD1306 devices working 
# on an I2C protocol won't allow multiple displays with the same
# address.

from machine import Pin, I2C
import ssd1306

i2c = I2C(0, scl=Pin(22), sda=Pin(21))

oled_width = 128
oled_height = 64
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, i2c)

newbus_bitmap = [
    0xff, 0x03, 0x03, 0x03, 0xf3, 0xf3, 0xf3, 0x33, 0x33, 0x33, 0x33, 0x73, 0xf3, 0xf3, 0xf3, 0xf3, 
	0xf3, 0xf3, 0x73, 0x33, 0x33, 0x33, 0x33, 0xf3, 0x33, 0x33, 0x33, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 
	0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0x33, 0x33, 0x33, 0xf3, 0xf3, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 
	0x13, 0x13, 0x13, 0x13, 0x13, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 
	0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0x13, 0x13, 0x13, 0x13, 
	0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 
	0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 
	0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0xf3, 0x13, 0x13, 0x13, 0xf3, 0xf3, 0xf3, 0x03, 0x03, 0x03, 0xff, 
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf0, 0xe0, 0xe1, 0xe1, 
	0xe0, 0xf0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x01, 0x01, 0xff, 0x01, 0x01, 0x01, 0xf9, 
	0xf9, 0x01, 0x01, 0x01, 0xff, 0x01, 0x01, 0x01, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 
	0x11, 0x00, 0x00, 0x00, 0x08, 0xff, 0x81, 0x01, 0x01, 0x1f, 0x1f, 0x1f, 0x01, 0x81, 0x81, 0xff, 
	0x21, 0x21, 0x21, 0x21, 0x29, 0x29, 0x09, 0x09, 0x09, 0x09, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
	0x11, 0x11, 0x11, 0x00, 0x00, 0x08, 0xff, 0x01, 0x01, 0x01, 0x39, 0x39, 0x01, 0x01, 0x01, 0xff, 
	0x09, 0x09, 0x29, 0x29, 0x29, 0x01, 0x01, 0x03, 0xff, 0x00, 0x00, 0x03, 0xf1, 0xf9, 0xf9, 0xff, 
	0x01, 0x01, 0x01, 0x19, 0x19, 0x19, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0xff, 
	0xff, 0xf8, 0xf8, 0xf8, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 
	0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 
	0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x7f, 0x7f, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 
	0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 
	0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x7f, 0x7f, 0x79, 0x79, 0x79, 0x79, 
	0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 
	0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0x79, 0xf9, 0xf9, 0xf9, 0xf9, 
	0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf9, 0xf8, 0xf8, 0xf8, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x1f, 0x07, 0x07, 0x07, 0xe7, 0xe7, 
	0x07, 0x03, 0x03, 0xe0, 0x18, 0x08, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 0x64, 
	0x64, 0x64, 0x64, 0x64, 0xf4, 0x1c, 0x04, 0x04, 0x04, 0x04, 0x04, 0xc4, 0x00, 0x00, 0x00, 0xf8, 
	0xfc, 0x1c, 0x1c, 0x1c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x1c, 0x1c, 0x1c, 0x9c, 
	0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x1c, 0x1c, 0x1c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 
	0x1c, 0x1c, 0x1c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x9c, 0x1c, 0x1c, 0x1c, 0x9c, 0x9c, 0x9c, 0x9c, 
	0x9c, 0x9c, 0x1c, 0x1c, 0x1c, 0x9c, 0x1c, 0x3c, 0x7c, 0xfc, 0xfc, 0xf8, 0xf0, 0xe1, 0x03, 0x07, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x03, 0x03, 0x02, 0x12, 0x32, 0x72, 0xf2, 0xf2, 0xf2, 0xe2, 0xc2, 0x82, 0x02, 
	0x02, 0x02, 0x12, 0x23, 0x43, 0x80, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x00, 0x00, 0x00, 0xff, 
	0xff, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x7f, 
	0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 
	0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7f, 0x7f, 
	0x7f, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x7e, 0x7c, 0x78, 0x01, 0x03, 0xff, 0xff, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0f, 0x1f, 0x3f, 
	0x3e, 0x3c, 0x38, 0x30, 0x20, 0x00, 0x01, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x1f, 
	0x1f, 0x18, 0x18, 0x08, 0x08, 0x0c, 0x0e, 0x86, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 
	0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 
	0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 
	0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xc7, 0xc7, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x3f, 0x31, 0x31, 0x31, 0x3f, 0x3f, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 
	0x31, 0x31, 0x3f, 0x3f, 0x3f, 0x31, 0x31, 0x31, 0x31, 0x3f, 0x3f, 0x3f, 0x00, 0x00, 0x00, 0x1e, 
	0x1e, 0x1e, 0x1e, 0x1f, 0x1f, 0x07, 0x03, 0x01, 0x00, 0xc0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 
	0xc0, 0x00, 0x01, 0x03, 0x07, 0x1f, 0x1f, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1f, 0x1f, 
	0x18, 0x18, 0x18, 0x18, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x07, 0x03, 0x01, 0x00, 0xc0, 
	0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xc0, 0x01, 0x03, 0x07, 0x1f, 0x1f, 0x1f, 0x0f, 0x80, 0xc0, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xf8, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 
	0xf0, 0xf0, 0xf0, 0xf8, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xf8, 0xf0, 0xe0, 0xc1, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 
	0xc1, 0xe0, 0xf0, 0xf8, 0xfc, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 
	0xf0, 0xf0, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xf0, 0xe0, 0xe1, 
	0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7, 0xc1, 0xe0, 0xf0, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
]

def draw_bitmap(bitmap):
    for i in range(0, len(bitmap)):
        for j in range(8):
            if bitmap[i] & (1 << j):
                oled.pixel(i % oled_width, i // oled_width * 8 + j, 1)
            else:
                oled.pixel(i % oled_width, i // oled_width * 8 + j, 0)


oled.fill(0)

draw_bitmap(newbus_bitmap)

oled.show()

